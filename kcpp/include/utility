// vim: set filetype=cpp:
#pragma once

#include <type_traits>

namespace std {

template<class T>
constexpr remove_reference_t<T>&& move(T&& t) noexcept
{
    return static_cast<remove_reference_t<T>&&>(t);
}

template <class T>
T&& forward(remove_reference_t<T>& t) noexcept
{
    return static_cast<T&&>(t);
}
template <class T>
T&& forward(remove_reference_t<T>&& t) noexcept
{
    return static_cast<T&&>(t);
}

template <class T>
void swap(T& left, T& right)
{
    T temp = move(left);
    left = move(right);
    right = move(temp);
}

}
